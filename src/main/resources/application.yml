spring:
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/gobz?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.jdbc.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect

  flyway:
    enabled: true
    clean-on-validation-error: false # /!\ Enabling this will erase database content on error => disable it in prod!
    locations: classpath:/db/migrations
    placeholders:
      defaultPassword: $2a$10$tdJKmGstUrF2CdmjOcryeOMoFTXK4rx1nc4fp1rzEfl8n09kbzSaq # => "test"

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  name: @project.name@
  version: @project.version@

  auth:
    tokenSecret: ${TOKEN_SECRET}
    tokenExpirationMsec: ${TOKEN_EXPIRATION_IN_MS:864000000}

  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect

  cors:
    allowedOrigins: ${CORS_ALLOWED_ORIGINS:"http://localhost:3000,http://localhost:8080/swagger-ui/*"}
    maxAgeInSec: 3600

  run:
    maxActiveAmount: 5

---
# This profile generates a sql file with sql sent by hibernate
spring:
  config:
    activate:
      on-profile: generatesql
  flyway:
    enabled: false
  jpa:
    properties:
      javax:
        persistence:
          schema-generation:
            create-source: metadata
            scripts:
              action: create
              create-target: src/main/resources/db/ddl_jpa_creation.sql
